"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[4250],{79003:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction \u2605","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Before Reading","href":"/jimmer-doc/docs/overview/welcome","docId":"overview/welcome","unlisted":false},{"type":"link","label":"Key Features \u2726","href":"/jimmer-doc/docs/overview/key-features","docId":"overview/key-features","unlisted":false},{"type":"link","label":"Overview \u2726","href":"/jimmer-doc/docs/overview/introduction","docId":"overview/introduction","unlisted":false},{"type":"link","label":"APT/KSP","href":"/jimmer-doc/docs/overview/apt-ksp","docId":"overview/apt-ksp","unlisted":false},{"type":"link","label":"Benchmark Report","href":"/jimmer-doc/docs/overview/benchmark","docId":"overview/benchmark","unlisted":false}],"href":"/jimmer-doc/docs/overview/"},{"type":"category","label":"Quick View \u2605","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Precondition","href":"/jimmer-doc/docs/quick-view/precondition","docId":"quick-view/precondition","unlisted":false},{"type":"category","label":"1. Query Arbitrary Shape","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Feature Introduction","href":"/jimmer-doc/docs/quick-view/fetch/feature","docId":"quick-view/fetch/feature","unlisted":false},{"type":"category","label":"Exposing Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Directly Return Entities","href":"/jimmer-doc/docs/quick-view/fetch/export/entity","docId":"quick-view/fetch/export/entity","unlisted":false},{"type":"link","label":"Return Output DTO","href":"/jimmer-doc/docs/quick-view/fetch/export/dto","docId":"quick-view/fetch/export/dto","unlisted":false},{"type":"link","label":"Comparison","href":"/jimmer-doc/docs/quick-view/fetch/export/comparison","docId":"quick-view/fetch/export/comparison","unlisted":false}],"href":"/jimmer-doc/docs/quick-view/fetch/export/"}],"href":"/jimmer-doc/docs/quick-view/fetch/"},{"type":"category","label":"2. Save Arbitrary Shape","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Feature Introduction","href":"/jimmer-doc/docs/quick-view/save/feature","docId":"quick-view/save/feature","unlisted":false},{"type":"category","label":"Exposing Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Save Aggregate Root","href":"/jimmer-doc/docs/quick-view/save/export/root","docId":"quick-view/save/export/root","unlisted":false},{"type":"link","label":"Save Short Associations","href":"/jimmer-doc/docs/quick-view/save/export/short","docId":"quick-view/save/export/short","unlisted":false},{"type":"link","label":"Save Long Associations","href":"/jimmer-doc/docs/quick-view/save/export/long","docId":"quick-view/save/export/long","unlisted":false}],"href":"/jimmer-doc/docs/quick-view/save/export/"}],"href":"/jimmer-doc/docs/quick-view/save/"},{"type":"category","label":"3. Arbitrary Dynamic Query","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Feature Introduction","href":"/jimmer-doc/docs/quick-view/dsl/feature","docId":"quick-view/dsl/feature","unlisted":false},{"type":"link","label":"Super QBE","href":"/jimmer-doc/docs/quick-view/dsl/super_qbe","docId":"quick-view/dsl/super_qbe","unlisted":false}],"href":"/jimmer-doc/docs/quick-view/dsl/"},{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Project","href":"/jimmer-doc/docs/quick-view/get-started/create-project","docId":"quick-view/get-started/create-project","unlisted":false},{"type":"link","label":"Create Database","href":"/jimmer-doc/docs/quick-view/get-started/create-database","docId":"quick-view/get-started/create-database","unlisted":false},{"type":"link","label":"Define Entities","href":"/jimmer-doc/docs/quick-view/get-started/define-entity","docId":"quick-view/get-started/define-entity","unlisted":false},{"type":"link","label":"Generate Code","href":"/jimmer-doc/docs/quick-view/get-started/generate-code","docId":"quick-view/get-started/generate-code","unlisted":false},{"type":"link","label":"Final Usage","href":"/jimmer-doc/docs/quick-view/get-started/usage","docId":"quick-view/get-started/usage","unlisted":false}],"href":"/jimmer-doc/docs/quick-view/get-started/"},{"type":"link","label":"Standard Examples","href":"/jimmer-doc/docs/quick-view/standard-demo","docId":"quick-view/standard-demo","unlisted":false}],"href":"/jimmer-doc/docs/quick-view/"},{"type":"category","label":"Showcase \u2605","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Basic Query","href":"/jimmer-doc/docs/showcase/base","docId":"showcase/base","unlisted":false},{"type":"category","label":"2. Fetch Associations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"2.1 Associated Object","href":"/jimmer-doc/docs/showcase/fetch-association/associated-object","docId":"showcase/fetch-association/associated-object","unlisted":false},{"type":"link","label":"2.2 More Associations","href":"/jimmer-doc/docs/showcase/fetch-association/more-association","docId":"showcase/fetch-association/more-association","unlisted":false},{"type":"link","label":"2.4 Associated Id","href":"/jimmer-doc/docs/showcase/fetch-association/associated-id","docId":"showcase/fetch-association/associated-id","unlisted":false},{"type":"link","label":"2.3 Deeper Association","href":"/jimmer-doc/docs/showcase/fetch-association/deeper-association","docId":"showcase/fetch-association/deeper-association","unlisted":false}],"href":"/jimmer-doc/docs/showcase/fetch-association/"},{"type":"category","label":"3. Recursive Query","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"3.1 Basic usage","href":"/jimmer-doc/docs/showcase/recursive-query/usage","docId":"showcase/recursive-query/usage","unlisted":false},{"type":"link","label":"3.2 Limit Depth","href":"/jimmer-doc/docs/showcase/recursive-query/depth","docId":"showcase/recursive-query/depth","unlisted":false},{"type":"link","label":"3.2 Control Recursion Of Node","href":"/jimmer-doc/docs/showcase/recursive-query/node-control","docId":"showcase/recursive-query/node-control","unlisted":false},{"type":"link","label":"3.4 Multiple Properties","href":"/jimmer-doc/docs/showcase/recursive-query/multiple-props","docId":"showcase/recursive-query/multiple-props","unlisted":false}],"href":"/jimmer-doc/docs/showcase/recursive-query/"},{"type":"category","label":"4. Where","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"4.1 Base Usage","href":"/jimmer-doc/docs/showcase/where/usage","docId":"showcase/where/usage","unlisted":false},{"type":"link","label":"4.2 Dynamic Conditions","href":"/jimmer-doc/docs/showcase/where/dynamic-where","docId":"showcase/where/dynamic-where","unlisted":false},{"type":"link","label":"4.3 Associated Id","href":"/jimmer-doc/docs/showcase/where/associated-id","docId":"showcase/where/associated-id","unlisted":false},{"type":"link","label":"4.4 Dynamic Table Join","href":"/jimmer-doc/docs/showcase/where/dynamic-join","docId":"showcase/where/dynamic-join","unlisted":false},{"type":"link","label":"4.5 Implicit Subquery","href":"/jimmer-doc/docs/showcase/where/implicit-subquery","docId":"showcase/where/implicit-subquery","unlisted":false}],"href":"/jimmer-doc/docs/showcase/where/"},{"type":"category","label":"5. Sorting","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"5.1 Basic Usage","href":"/jimmer-doc/docs/showcase/order-by/usage","docId":"showcase/order-by/usage","unlisted":false},{"type":"link","label":"5.2 Dynamic Sorting","href":"/jimmer-doc/docs/showcase/order-by/dynamic","docId":"showcase/order-by/dynamic","unlisted":false}],"href":"/jimmer-doc/docs/showcase/order-by/"},{"type":"link","label":"6. Paging Query","href":"/jimmer-doc/docs/showcase/page","docId":"showcase/page","unlisted":false},{"type":"link","label":"7. Comprehensive Query","href":"/jimmer-doc/docs/showcase/comprehensive-query","docId":"showcase/comprehensive-query","unlisted":false},{"type":"link","label":"8. Other Queries","href":"/jimmer-doc/docs/showcase/other-query","docId":"showcase/other-query","unlisted":false},{"type":"link","label":"9. Update statement","href":"/jimmer-doc/docs/showcase/update-statement","docId":"showcase/update-statement","unlisted":false},{"type":"link","label":"10. Delete statement","href":"/jimmer-doc/docs/showcase/delete-statement","docId":"showcase/delete-statement","unlisted":false},{"type":"link","label":"X. To be Continued...","href":"/jimmer-doc/docs/showcase/to-be-conitnued","docId":"showcase/to-be-conitnued","unlisted":false}],"href":"/jimmer-doc/docs/showcase/"},{"type":"category","label":"Mapping","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Base mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Nullity","href":"/jimmer-doc/docs/mapping/base/nullity","docId":"mapping/base/nullity","unlisted":false},{"type":"link","label":"Simple Mapping","href":"/jimmer-doc/docs/mapping/base/basic","docId":"mapping/base/basic","unlisted":false},{"type":"category","label":"Association Mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"One To One","href":"/jimmer-doc/docs/mapping/base/association/one-to-one","docId":"mapping/base/association/one-to-one","unlisted":false},{"type":"link","label":"Many To One","href":"/jimmer-doc/docs/mapping/base/association/many-to-one","docId":"mapping/base/association/many-to-one","unlisted":false},{"type":"link","label":"One To Many","href":"/jimmer-doc/docs/mapping/base/association/one-to-many","docId":"mapping/base/association/one-to-many","unlisted":false},{"type":"link","label":"Many To Many","href":"/jimmer-doc/docs/mapping/base/association/many-to-many","docId":"mapping/base/association/many-to-many","unlisted":false}],"href":"/jimmer-doc/docs/mapping/base/association/"},{"type":"link","label":"Naming Strategy","href":"/jimmer-doc/docs/mapping/base/naming-strategy","docId":"mapping/base/naming-strategy","unlisted":false},{"type":"link","label":"Real and Fake Foreign Keys","href":"/jimmer-doc/docs/mapping/base/foreignkey","docId":"mapping/base/foreignkey","unlisted":false},{"type":"link","label":"JSON Converter","href":"/jimmer-doc/docs/mapping/base/json-converter","docId":"mapping/base/json-converter","unlisted":false},{"type":"link","label":"More Types","href":"/jimmer-doc/docs/mapping/base/more-type","docId":"mapping/base/more-type","unlisted":false}],"href":"/jimmer-doc/docs/mapping/base/"},{"type":"category","label":"Advanced mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Embedded Properties","href":"/jimmer-doc/docs/mapping/advanced/embedded","docId":"mapping/advanced/embedded","unlisted":false},{"type":"link","label":"MappedSuperclass","href":"/jimmer-doc/docs/mapping/advanced/mapped-super-class","docId":"mapping/advanced/mapped-super-class","unlisted":false},{"type":"category","label":"Logical Deletion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Entity Table","href":"/jimmer-doc/docs/mapping/advanced/logical-deleted/entity","docId":"mapping/advanced/logical-deleted/entity","unlisted":false},{"type":"link","label":"Join Table","href":"/jimmer-doc/docs/mapping/advanced/logical-deleted/join-table","docId":"mapping/advanced/logical-deleted/join-table","unlisted":false}],"href":"/jimmer-doc/docs/mapping/advanced/logical-deleted/"},{"type":"category","label":"View Properties","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IdView","href":"/jimmer-doc/docs/mapping/advanced/view/id-view","docId":"mapping/advanced/view/id-view","unlisted":false},{"type":"link","label":"ManyToManyView","href":"/jimmer-doc/docs/mapping/advanced/view/many-to-many-view","docId":"mapping/advanced/view/many-to-many-view","unlisted":false}],"href":"/jimmer-doc/docs/mapping/advanced/view/"},{"type":"category","label":"Calculated Properties","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Formula","href":"/jimmer-doc/docs/mapping/advanced/calculated/formula","docId":"mapping/advanced/calculated/formula","unlisted":false},{"type":"link","label":"Complex Calculation","href":"/jimmer-doc/docs/mapping/advanced/calculated/transient","docId":"mapping/advanced/calculated/transient","unlisted":false}],"href":"/jimmer-doc/docs/mapping/advanced/calculated/"},{"type":"link","label":"Enum Mapping","href":"/jimmer-doc/docs/mapping/advanced/enum","docId":"mapping/advanced/enum","unlisted":false},{"type":"link","label":"JSON Mapping","href":"/jimmer-doc/docs/mapping/advanced/json","docId":"mapping/advanced/json","unlisted":false},{"type":"link","label":"Non-Structural Mapping","href":"/jimmer-doc/docs/mapping/advanced/join-sql","docId":"mapping/advanced/join-sql","unlisted":false},{"type":"link","label":"Join Table Filter","href":"/jimmer-doc/docs/mapping/advanced/join-table-filter","docId":"mapping/advanced/join-table-filter","unlisted":false},{"type":"link","label":"Key","href":"/jimmer-doc/docs/mapping/advanced/key","docId":"mapping/advanced/key","unlisted":false},{"type":"link","label":"Remote Association","href":"/jimmer-doc/docs/mapping/advanced/remote","docId":"mapping/advanced/remote","unlisted":false},{"type":"link","label":"OnDissociate","href":"/jimmer-doc/docs/mapping/advanced/on-dissociate","docId":"mapping/advanced/on-dissociate","unlisted":false}],"href":"/jimmer-doc/docs/mapping/advanced/"}],"href":"/jimmer-doc/docs/mapping/"},{"type":"category","label":"Query","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/jimmer-doc/docs/query/usage","docId":"query/usage","unlisted":false},{"type":"category","label":"Object Fetcher","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Usage","href":"/jimmer-doc/docs/query/object-fetcher/usage","docId":"query/object-fetcher/usage","unlisted":false},{"type":"link","label":"Ordinary Properties","href":"/jimmer-doc/docs/query/object-fetcher/props","docId":"query/object-fetcher/props","unlisted":false},{"type":"link","label":"Associations","href":"/jimmer-doc/docs/query/object-fetcher/association","docId":"query/object-fetcher/association","unlisted":false},{"type":"link","label":"Recursive Query","href":"/jimmer-doc/docs/query/object-fetcher/recursive","docId":"query/object-fetcher/recursive","unlisted":false},{"type":"link","label":"View Properties","href":"/jimmer-doc/docs/query/object-fetcher/view","docId":"query/object-fetcher/view","unlisted":false},{"type":"link","label":"Querying DTOs","href":"/jimmer-doc/docs/query/object-fetcher/dto","docId":"query/object-fetcher/dto","unlisted":false},{"type":"link","label":"Working with Spring Data","href":"/jimmer-doc/docs/query/object-fetcher/spring-data","docId":"query/object-fetcher/spring-data","unlisted":false}],"href":"/jimmer-doc/docs/query/object-fetcher/"},{"type":"link","label":"Dynamic Filtering","href":"/jimmer-doc/docs/query/dynamic-where","docId":"query/dynamic-where","unlisted":false},{"type":"category","label":"Dynamic JOIN","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Problems with Other Solutions","href":"/jimmer-doc/docs/query/dynamic-join/problem","docId":"query/dynamic-join/problem","unlisted":false},{"type":"link","label":"Association Path Chaining","href":"/jimmer-doc/docs/query/dynamic-join/chain-style","docId":"query/dynamic-join/chain-style","unlisted":false},{"type":"link","label":"Merge Conflict Joins","href":"/jimmer-doc/docs/query/dynamic-join/merge","docId":"query/dynamic-join/merge","unlisted":false},{"type":"link","label":"Optimize Unnecessary Joins","href":"/jimmer-doc/docs/query/dynamic-join/optimization","docId":"query/dynamic-join/optimization","unlisted":false},{"type":"link","label":"Pagination Safety","href":"/jimmer-doc/docs/query/dynamic-join/table-ex","docId":"query/dynamic-join/table-ex","unlisted":false},{"type":"link","label":"Weak Join","href":"/jimmer-doc/docs/query/dynamic-join/weak-join","docId":"query/dynamic-join/weak-join","unlisted":false},{"type":"link","label":"Join Features Specific to Kotlin","href":"/jimmer-doc/docs/query/dynamic-join/kotlin-join","docId":"query/dynamic-join/kotlin-join","unlisted":false}],"href":"/jimmer-doc/docs/query/dynamic-join/"},{"type":"link","label":"Implicit Subquery","href":"/jimmer-doc/docs/query/implicit-subquery","docId":"query/implicit-subquery","unlisted":false},{"type":"link","label":"Dynamic Ordering","href":"/jimmer-doc/docs/query/dynamic-order","docId":"query/dynamic-order","unlisted":false},{"type":"link","label":"Aggregate & Group","href":"/jimmer-doc/docs/query/group","docId":"query/group","unlisted":false},{"type":"category","label":"Smart Paging","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Usage","href":"/jimmer-doc/docs/query/paging/usage","docId":"query/paging/usage","unlisted":false},{"type":"link","label":"Table Join Optimization","href":"/jimmer-doc/docs/query/paging/unnecessary-join","docId":"query/paging/unnecessary-join","unlisted":false},{"type":"link","label":"Reverse Sorting Optimization","href":"/jimmer-doc/docs/query/paging/reverse-sorting","docId":"query/paging/reverse-sorting","unlisted":false},{"type":"link","label":"Deep Pagination Optimization","href":"/jimmer-doc/docs/query/paging/deep-optimization","docId":"query/paging/deep-optimization","unlisted":false}],"href":"/jimmer-doc/docs/query/paging/"},{"type":"link","label":"DSL Expressions","href":"/jimmer-doc/docs/query/expression","docId":"query/expression","unlisted":false},{"type":"link","label":"Native SQL Expressions","href":"/jimmer-doc/docs/query/native-sql","docId":"query/native-sql","unlisted":false},{"type":"link","label":"Subqueries","href":"/jimmer-doc/docs/query/sub-query","docId":"query/sub-query","unlisted":false},{"type":"category","label":"Global Filters","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Filters","href":"/jimmer-doc/docs/query/global-filter/user-filter","docId":"query/global-filter/user-filter","unlisted":false},{"type":"link","label":"Logical Deletion","href":"/jimmer-doc/docs/query/global-filter/logical-deleted","docId":"query/global-filter/logical-deleted","unlisted":false}],"href":"/jimmer-doc/docs/query/global-filter/"},{"type":"link","label":"Querying Association Tables","href":"/jimmer-doc/docs/query/associations","docId":"query/associations","unlisted":false},{"type":"link","label":"Super QBE","href":"/jimmer-doc/docs/query/super_qbe","docId":"query/super_qbe","unlisted":false}],"href":"/jimmer-doc/docs/query/"},{"type":"category","label":"Modification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Update Statement","href":"/jimmer-doc/docs/mutation/update-statement","docId":"mutation/update-statement","unlisted":false},{"type":"link","label":"Delete Statement","href":"/jimmer-doc/docs/mutation/delete-statement","docId":"mutation/delete-statement","unlisted":false},{"type":"category","label":"Save Command","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Usage","href":"/jimmer-doc/docs/mutation/save-command/usage","docId":"mutation/save-command/usage","unlisted":false},{"type":"link","label":"Data Classification","href":"/jimmer-doc/docs/mutation/save-command/data-classification","docId":"mutation/save-command/data-classification","unlisted":false},{"type":"link","label":"Save Mode of Aggregate-Root","href":"/jimmer-doc/docs/mutation/save-command/save-mode","docId":"mutation/save-command/save-mode","unlisted":false},{"type":"category","label":"Associations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Association classification","href":"/jimmer-doc/docs/mutation/save-command/association/classification","docId":"mutation/save-command/association/classification","unlisted":false},{"type":"link","label":"Owner side","href":"/jimmer-doc/docs/mutation/save-command/association/owner","docId":"mutation/save-command/association/owner","unlisted":false},{"type":"link","label":"Associated Save Mode","href":"/jimmer-doc/docs/mutation/save-command/association/associated-save-mode","docId":"mutation/save-command/association/associated-save-mode","unlisted":false},{"type":"link","label":"Dissociation Operations","href":"/jimmer-doc/docs/mutation/save-command/association/dissociation","docId":"mutation/save-command/association/dissociation","unlisted":false}],"href":"/jimmer-doc/docs/mutation/save-command/association/"},{"type":"link","label":"Constraint Violation Error Handling","href":"/jimmer-doc/docs/mutation/save-command/investigation","docId":"mutation/save-command/investigation","unlisted":false},{"type":"link","label":"Optimistic Locking","href":"/jimmer-doc/docs/mutation/save-command/optimistic-locking","docId":"mutation/save-command/optimistic-locking","unlisted":false},{"type":"link","label":"Pessimistic Locking","href":"/jimmer-doc/docs/mutation/save-command/pessimistic-locking","docId":"mutation/save-command/pessimistic-locking","unlisted":false},{"type":"link","label":"MySQL Issues","href":"/jimmer-doc/docs/mutation/save-command/mysql","docId":"mutation/save-command/mysql","unlisted":false},{"type":"category","label":"Input DTO","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Problem","href":"/jimmer-doc/docs/mutation/save-command/input-dto/problem","docId":"mutation/save-command/input-dto/problem","unlisted":false},{"type":"link","label":"Lonely Form","href":"/jimmer-doc/docs/mutation/save-command/input-dto/lonely","docId":"mutation/save-command/input-dto/lonely","unlisted":false},{"type":"link","label":"Using DTO Language","href":"/jimmer-doc/docs/mutation/save-command/input-dto/dto-lang","docId":"mutation/save-command/input-dto/dto-lang","unlisted":false},{"type":"link","label":"Handle Null Values","href":"/jimmer-doc/docs/mutation/save-command/input-dto/null-handling","docId":"mutation/save-command/input-dto/null-handling","unlisted":false},{"type":"link","label":"Using MapStruct","href":"/jimmer-doc/docs/mutation/save-command/input-dto/mapstruct","docId":"mutation/save-command/input-dto/mapstruct","unlisted":false}],"href":"/jimmer-doc/docs/mutation/save-command/input-dto/"}],"href":"/jimmer-doc/docs/mutation/save-command/"},{"type":"link","label":"Delete Command","href":"/jimmer-doc/docs/mutation/delete-command","docId":"mutation/delete-command","unlisted":false},{"type":"link","label":"Mutable Association Table","href":"/jimmer-doc/docs/mutation/associations","docId":"mutation/associations","unlisted":false},{"type":"link","label":"Interceptor before save","href":"/jimmer-doc/docs/mutation/draft-interceptor","docId":"mutation/draft-interceptor","unlisted":false},{"type":"link","label":"Trigger","href":"/jimmer-doc/docs/mutation/trigger","docId":"mutation/trigger","unlisted":false}],"href":"/jimmer-doc/docs/mutation/"},{"type":"category","label":"Cache","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Enable Cache","href":"/jimmer-doc/docs/cache/enable-cache","docId":"cache/enable-cache","unlisted":false},{"type":"category","label":"Cache type","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Object Cache","href":"/jimmer-doc/docs/cache/cache-type/object","docId":"cache/cache-type/object","unlisted":false},{"type":"link","label":"Association Cache","href":"/jimmer-doc/docs/cache/cache-type/association","docId":"cache/cache-type/association","unlisted":false},{"type":"link","label":"Calculated Cache","href":"/jimmer-doc/docs/cache/cache-type/calculation","docId":"cache/cache-type/calculation","unlisted":false}],"href":"/jimmer-doc/docs/cache/cache-type/"},{"type":"link","label":"Cache Consistency","href":"/jimmer-doc/docs/cache/consistency","docId":"cache/consistency","unlisted":false},{"type":"category","label":"Multi-view Cache","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Concepts","href":"/jimmer-doc/docs/cache/multiview-cache/concept","docId":"cache/multiview-cache/concept","unlisted":false},{"type":"link","label":"User Defined Cacheable Filters","href":"/jimmer-doc/docs/cache/multiview-cache/user-filter","docId":"cache/multiview-cache/user-filter","unlisted":false},{"type":"link","label":"Advanced usage","href":"/jimmer-doc/docs/cache/multiview-cache/advanced","docId":"cache/multiview-cache/advanced","unlisted":false},{"type":"link","label":"Cache Abandoned Reason","href":"/jimmer-doc/docs/cache/multiview-cache/abandoned-callback","docId":"cache/multiview-cache/abandoned-callback","unlisted":false}],"href":"/jimmer-doc/docs/cache/multiview-cache/"}],"href":"/jimmer-doc/docs/cache/"},{"type":"category","label":"Client","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Generate Client API","href":"/jimmer-doc/docs/client/api","docId":"client/api","unlisted":false},{"type":"link","label":"Generate Client Errors","href":"/jimmer-doc/docs/client/error","docId":"client/error","unlisted":false}],"href":"/jimmer-doc/docs/client/"},{"type":"category","label":"Spring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Spring Transaction","href":"/jimmer-doc/docs/spring/transaction","docId":"spring/transaction","unlisted":false},{"type":"category","label":"Spring Data","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Define Repository","href":"/jimmer-doc/docs/spring/repository/concept","docId":"spring/repository/concept","unlisted":false},{"type":"link","label":"Simple Queries","href":"/jimmer-doc/docs/spring/repository/abstract","docId":"spring/repository/abstract","unlisted":false},{"type":"link","label":"Complex Queries","href":"/jimmer-doc/docs/spring/repository/default","docId":"spring/repository/default","unlisted":false},{"type":"link","label":"Query DTO","href":"/jimmer-doc/docs/spring/repository/dto","docId":"spring/repository/dto","unlisted":false}],"href":"/jimmer-doc/docs/spring/repository/"},{"type":"link","label":"Remote Associations","href":"/jimmer-doc/docs/spring/spring-cloud","docId":"spring/spring-cloud","unlisted":false},{"type":"link","label":"Appendix","href":"/jimmer-doc/docs/spring/appendix","docId":"spring/appendix","unlisted":false}],"href":"/jimmer-doc/docs/spring/"},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dialect","href":"/jimmer-doc/docs/configuration/dialect","docId":"configuration/dialect","unlisted":false},{"type":"link","label":"Connection Manager","href":"/jimmer-doc/docs/configuration/connection-manager","docId":"configuration/connection-manager","unlisted":false},{"type":"link","label":"Multiple DataSources","href":"/jimmer-doc/docs/configuration/multi-datasources","docId":"configuration/multi-datasources","unlisted":false},{"type":"link","label":"Batch Control","href":"/jimmer-doc/docs/configuration/batch-size","docId":"configuration/batch-size","unlisted":false},{"type":"link","label":"SQL Log","href":"/jimmer-doc/docs/configuration/sql-log","docId":"configuration/sql-log","unlisted":false},{"type":"link","label":"Default Enum Strategy","href":"/jimmer-doc/docs/configuration/default-enum-strategy","docId":"configuration/default-enum-strategy","unlisted":false},{"type":"link","label":"Default Naming Strategy","href":"/jimmer-doc/docs/configuration/default-database-stragegy","docId":"configuration/default-database-stragegy","unlisted":false},{"type":"link","label":"Trigger Type","href":"/jimmer-doc/docs/configuration/trigger-type","docId":"configuration/trigger-type","unlisted":false},{"type":"link","label":"Database Validation","href":"/jimmer-doc/docs/configuration/database-validation","docId":"configuration/database-validation","unlisted":false},{"type":"link","label":"Microservice","href":"/jimmer-doc/docs/configuration/micro-service","docId":"configuration/micro-service","unlisted":false},{"type":"link","label":"Scalar Provider","href":"/jimmer-doc/docs/configuration/scala-provider","docId":"configuration/scala-provider","unlisted":false},{"type":"link","label":"Cache Abandoned Reason","href":"/jimmer-doc/docs/configuration/cache-abandoned","docId":"configuration/cache-abandoned","unlisted":false},{"type":"link","label":"Pessimistic Lock","href":"/jimmer-doc/docs/configuration/save-command-pessimistic-lock","docId":"configuration/save-command-pessimistic-lock","unlisted":false},{"type":"link","label":"Associated Id Checking","href":"/jimmer-doc/docs/configuration/id-only-target-checking-level","docId":"configuration/id-only-target-checking-level","unlisted":false},{"type":"link","label":"Default Dissociation Mode","href":"/jimmer-doc/docs/configuration/dissociate-action-checking","docId":"configuration/dissociate-action-checking","unlisted":false},{"type":"link","label":"In List Predicate Optimization","href":"/jimmer-doc/docs/configuration/in-list-optimization","docId":"configuration/in-list-optimization","unlisted":false}],"href":"/jimmer-doc/docs/configuration/"},{"type":"category","label":"GraphQL","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Concepts","href":"/jimmer-doc/docs/graphql/concept","docId":"graphql/concept","unlisted":false},{"type":"link","label":"Query","href":"/jimmer-doc/docs/graphql/query","docId":"graphql/query","unlisted":false},{"type":"link","label":"Mutation","href":"/jimmer-doc/docs/graphql/mutation","docId":"graphql/mutation","unlisted":false}],"href":"/jimmer-doc/docs/graphql/"},{"type":"category","label":"Object","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dynamicity","href":"/jimmer-doc/docs/object/dynamic","docId":"object/dynamic","unlisted":false},{"type":"category","label":"Immutability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Reason","href":"/jimmer-doc/docs/object/immutable/reason","docId":"object/immutable/reason","unlisted":false},{"type":"link","label":"Current Situation","href":"/jimmer-doc/docs/object/immutable/current-situation","docId":"object/immutable/current-situation","unlisted":false},{"type":"link","label":"Solution","href":"/jimmer-doc/docs/object/immutable/solution","docId":"object/immutable/solution","unlisted":false}],"href":"/jimmer-doc/docs/object/immutable/"},{"type":"link","label":"Draft","href":"/jimmer-doc/docs/object/draft","docId":"object/draft","unlisted":false},{"type":"link","label":"Working with Jackson","href":"/jimmer-doc/docs/object/jackson","docId":"object/jackson","unlisted":false},{"type":"category","label":"DTO conversion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DTO Language","href":"/jimmer-doc/docs/object/view/dto-language","docId":"object/view/dto-language","unlisted":false},{"type":"link","label":"MapStruct","href":"/jimmer-doc/docs/object/view/mapstruct","docId":"object/view/mapstruct","unlisted":false}],"href":"/jimmer-doc/docs/object/view/"},{"type":"link","label":"Visibility","href":"/jimmer-doc/docs/object/visibility","docId":"object/visibility","unlisted":false},{"type":"link","label":"Tool Methods","href":"/jimmer-doc/docs/object/tool","docId":"object/tool","unlisted":false}],"href":"/jimmer-doc/docs/object/"},{"type":"category","label":"Resources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Ecosystem","href":"/jimmer-doc/docs/resource/ecosystem","docId":"resource/ecosystem","unlisted":false},{"type":"link","label":"Video","href":"/jimmer-doc/docs/resource/video","docId":"resource/video","unlisted":false},{"type":"link","label":"Discuss","href":"/jimmer-doc/docs/resource/discuss","docId":"resource/discuss","unlisted":false}],"href":"/jimmer-doc/docs/resource/"}]},"docs":{"cache/cache-type/association":{"id":"cache/cache-type/association","title":"Association Cache","description":"Association cache refers to mapping the current object id to the associated object id or collection.","sidebar":"tutorialSidebar"},"cache/cache-type/calculation":{"id":"cache/cache-type/calculation","title":"Calculated Cache","description":"Calculated cache refers to mapping the current object id to the calculated value of the user-defined complex calculated property.","sidebar":"tutorialSidebar"},"cache/cache-type/index":{"id":"cache/cache-type/index","title":"Cache type","description":"Here, we will introduce three types of cache","sidebar":"tutorialSidebar"},"cache/cache-type/object":{"id":"cache/cache-type/object","title":"Object Cache","description":"Object cache refers to mapping id to entity object. This is the simplest and most basic cache.","sidebar":"tutorialSidebar"},"cache/consistency":{"id":"cache/consistency","title":"Cache Consistency","description":"In previous articles on object cache, association cache, and calculated cache, we have discussed in detail how Jimmer automatically deletes affected caches when data is modified.","sidebar":"tutorialSidebar"},"cache/enable-cache":{"id":"cache/enable-cache","title":"Enable Cache","description":"CacheFactory Interface","sidebar":"tutorialSidebar"},"cache/index":{"id":"cache/index","title":"Cache","description":"Jimmer provides powerful cache support capabilities.","sidebar":"tutorialSidebar"},"cache/multiview-cache/abandoned-callback":{"id":"cache/multiview-cache/abandoned-callback","title":"Cache Abandoned Reason","description":"CacheAbandonedCallback","sidebar":"tutorialSidebar"},"cache/multiview-cache/advanced":{"id":"cache/multiview-cache/advanced","title":"Advanced usage","description":"","sidebar":"tutorialSidebar"},"cache/multiview-cache/concept":{"id":"cache/multiview-cache/concept","title":"Basic Concepts","description":"Concepts","sidebar":"tutorialSidebar"},"cache/multiview-cache/index":{"id":"cache/multiview-cache/index","title":"Multi-view Cache","description":"Features represented by permission systems allow different users to see different data. Therefore, Jimmer uses multi-view cache to allow different users to see different caches.","sidebar":"tutorialSidebar"},"cache/multiview-cache/user-filter":{"id":"cache/multiview-cache/user-filter","title":"User Defined Cacheable Filters","description":"Cache-friendly Filters","sidebar":"tutorialSidebar"},"client/api":{"id":"client/api","title":"Generate Client API","description":"Basic Concepts","sidebar":"tutorialSidebar"},"client/error":{"id":"client/error","title":"Generate Client Errors","description":"This part is actually unrelated to ORM.","sidebar":"tutorialSidebar"},"client/index":{"id":"client/index","title":"Client","description":"","sidebar":"tutorialSidebar"},"configuration/batch-size":{"id":"configuration/batch-size","title":"Batch Control","description":"SqlClient supports two configurations: DefaultBatchSize and DefaultListBatchSize. If not configured, the default values are 128 and 16.","sidebar":"tutorialSidebar"},"configuration/cache-abandoned":{"id":"configuration/cache-abandoned","title":"Cache Abandoned Reason","description":"This configuration is explained in Cache Section/Multiview Cache/Cache Abandoned Reason.","sidebar":"tutorialSidebar"},"configuration/connection-manager":{"id":"configuration/connection-manager","title":"Connection Manager","description":"Concept","sidebar":"tutorialSidebar"},"configuration/database-validation":{"id":"configuration/database-validation","title":"Database Validation","description":"Function Introduction","sidebar":"tutorialSidebar"},"configuration/default-database-stragegy":{"id":"configuration/default-database-stragegy","title":"Default Naming Strategy","description":"This configuration is explained in Mapping Section/Base Mapping/Naming Strategy.","sidebar":"tutorialSidebar"},"configuration/default-enum-strategy":{"id":"configuration/default-enum-strategy","title":"Default Enum Strategy","description":"This configuration is explained in Mapping Section/Advanced Mapping/Enum Mapping/Don\'t explicitly use @EnumType.","sidebar":"tutorialSidebar"},"configuration/dialect":{"id":"configuration/dialect","title":"Dialect","description":"Different databases have vastly different SQL support, so Jimmer uses dialect configuration to adapt to different databases.","sidebar":"tutorialSidebar"},"configuration/dissociate-action-checking":{"id":"configuration/dissociate-action-checking","title":"Default Dissociation Mode","description":"In the OnDissociate article, we know there are 5 dissociation modes:","sidebar":"tutorialSidebar"},"configuration/id-only-target-checking-level":{"id":"configuration/id-only-target-checking-level","title":"Associated Id Checking","description":"This configuration is explained in Mutation Section/Save Command/Constraint Violation Error Handling/fake-foreign-keys.","sidebar":"tutorialSidebar"},"configuration/in-list-optimization":{"id":"configuration/in-list-optimization","title":"In List Predicate Optimization","description":"This article only explains how to enable the relevant options.","sidebar":"tutorialSidebar"},"configuration/index":{"id":"configuration/index","title":"Configuration","description":"This section introduces the global configurations supported by Jimmer.","sidebar":"tutorialSidebar"},"configuration/micro-service":{"id":"configuration/micro-service","title":"Microservice","description":"This configuration is explained in Spring Section/SpringCloud and Remote Association/Enable Jimmer to Support Microservices.","sidebar":"tutorialSidebar"},"configuration/multi-datasources":{"id":"configuration/multi-datasources","title":"Multiple DataSources","description":"In Jimmer, each data source corresponds to a sqlClient object (whose type is JSqlClient or KSqlClient).","sidebar":"tutorialSidebar"},"configuration/save-command-pessimistic-lock":{"id":"configuration/save-command-pessimistic-lock","title":"Pessimistic Lock","description":"This configuration is explained in Mutation Section/Save Command/Pessimistic Locking.","sidebar":"tutorialSidebar"},"configuration/scala-provider":{"id":"configuration/scala-provider","title":"Scalar Provider","description":"Basic Concepts","sidebar":"tutorialSidebar"},"configuration/sql-log":{"id":"configuration/sql-log","title":"SQL Log","description":"For ORM, it is important to print generated SQL in logs.","sidebar":"tutorialSidebar"},"configuration/trigger-type":{"id":"configuration/trigger-type","title":"Trigger Type","description":"This configuration is explained in Mutation Section/Trigger/Set Trigger Type.","sidebar":"tutorialSidebar"},"graphql/concept":{"id":"graphql/concept","title":"Basic Concepts","description":"Concepts","sidebar":"tutorialSidebar"},"graphql/index":{"id":"graphql/index","title":"GraphQL","description":"This section introduces how to quickly create GraphQL services with Jimmer.","sidebar":"tutorialSidebar"},"graphql/mutation":{"id":"graphql/mutation","title":"Mutation","description":"Introduction to GraphQL Input","sidebar":"tutorialSidebar"},"graphql/query":{"id":"graphql/query","title":"Query","description":"Feature Description","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/formula":{"id":"mapping/advanced/calculated/formula","title":"Formula","description":"Simple formula properties are properties declared with @org.babyfish.jimmer.sql.Formula. There are two usages:","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/index":{"id":"mapping/advanced/calculated/index","title":"Calculated Properties","description":"In this article, you will learn about Jimmer\'s calculated properties and annotations:","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/transient":{"id":"mapping/advanced/calculated/transient","title":"Complex Calculation","description":"@Transient Annotation","sidebar":"tutorialSidebar"},"mapping/advanced/embedded":{"id":"mapping/advanced/embedded","title":"Embedded Properties","description":"Embedded properties (Composite properties) merge multiple columns in the database into an integral whole, map them to a non-entity custom type, and then use this custom type to declare a property for the entity.","sidebar":"tutorialSidebar"},"mapping/advanced/enum":{"id":"mapping/advanced/enum","title":"Enum Mapping","description":"Jimmer handles enums in two ways:","sidebar":"tutorialSidebar"},"mapping/advanced/index":{"id":"mapping/advanced/index","title":"Advanced mapping","description":"In this series of articles, we will introduce advanced mappings.","sidebar":"tutorialSidebar"},"mapping/advanced/join-sql":{"id":"mapping/advanced/join-sql","title":"Non-Structural Mapping","description":"Non-Structural Design Example","sidebar":"tutorialSidebar"},"mapping/advanced/join-table-filter":{"id":"mapping/advanced/join-table-filter","title":"Join Table Filter","description":"Two Scenarios","sidebar":"tutorialSidebar"},"mapping/advanced/json":{"id":"mapping/advanced/json","title":"JSON Mapping","description":"Jimmer supports JSON properties. In Java/Kotlin entity types, such properties can be declared as any type other than java.lang.Object and kotlin.Any.","sidebar":"tutorialSidebar"},"mapping/advanced/key":{"id":"mapping/advanced/key","title":"Key","description":"Concept","sidebar":"tutorialSidebar"},"mapping/advanced/logical-deleted/entity":{"id":"mapping/advanced/logical-deleted/entity","title":"Entity Table","description":"To enable logical deletion support for an entity, add a flag property annotated with org.babyfish.jimmer.sql.LogicalDeleted to indicate whether the data is normal or already deleted.","sidebar":"tutorialSidebar"},"mapping/advanced/logical-deleted/index":{"id":"mapping/advanced/logical-deleted/index","title":"Logical Deletion","description":"Logical deletion, also known as soft deletion, means data is not actually deleted. Instead, data is hidden to give the illusion of deletion. This leaves room for recovering from accidental operations.","sidebar":"tutorialSidebar"},"mapping/advanced/logical-deleted/join-table":{"id":"mapping/advanced/logical-deleted/join-table","title":"Join Table","description":"To enable logical deletion for the middle table, the property needs to be specified for the org.babyfish.jimmer.sql.JoinTable annotation to indicate whether the data is normal or has been deleted.","sidebar":"tutorialSidebar"},"mapping/advanced/mapped-super-class":{"id":"mapping/advanced/mapped-super-class","title":"MappedSuperclass","description":"Basic Usage","sidebar":"tutorialSidebar"},"mapping/advanced/on-dissociate":{"id":"mapping/advanced/on-dissociate","title":"OnDissociate","description":"Concepts","sidebar":"tutorialSidebar"},"mapping/advanced/remote":{"id":"mapping/advanced/remote","title":"Remote Association","description":"Remote association is a product of combining Jimmer with microservice architecture. It will be introduced in detail in Spring Cloud and Remote Association.","sidebar":"tutorialSidebar"},"mapping/advanced/view/id-view":{"id":"mapping/advanced/view/id-view","title":"IdView","description":"Basic Concepts: Short Associations","sidebar":"tutorialSidebar"},"mapping/advanced/view/index":{"id":"mapping/advanced/view/index","title":"View Properties","description":"View properties do not maintain their own data, they are just another representation of another attribute (called original attribute) of their owning entity type.","sidebar":"tutorialSidebar"},"mapping/advanced/view/many-to-many-view":{"id":"mapping/advanced/view/many-to-many-view","title":"ManyToManyView","description":"Limitations of classic ORM associations","sidebar":"tutorialSidebar"},"mapping/base/association/index":{"id":"mapping/base/association/index","title":"Association Mapping","description":"Here, you will learn about the most important capability of ORM","sidebar":"tutorialSidebar"},"mapping/base/association/many-to-many":{"id":"mapping/base/association/many-to-many","title":"Many To Many","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.ManyToMany annotation to declare many-to-many association properties.","sidebar":"tutorialSidebar"},"mapping/base/association/many-to-one":{"id":"mapping/base/association/many-to-one","title":"Many To One","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.ManyToOne annotation to declare many-to-one association properties.","sidebar":"tutorialSidebar"},"mapping/base/association/one-to-many":{"id":"mapping/base/association/one-to-many","title":"One To Many","description":"Unlike JPA, Jimmer does not support unidirectional one-to-many associations. One-to-many associations can only exist as mirrors of many-to-one associations. That is, one-to-many associations necessarily imply bidirectional associations.","sidebar":"tutorialSidebar"},"mapping/base/association/one-to-one":{"id":"mapping/base/association/one-to-one","title":"One To One","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.OneToOne annotation to declare one-to-one association properties.","sidebar":"tutorialSidebar"},"mapping/base/basic":{"id":"mapping/base/basic","title":"Simple Mapping","description":"@Entity","sidebar":"tutorialSidebar"},"mapping/base/foreignkey":{"id":"mapping/base/foreignkey","title":"Real and Fake Foreign Keys","description":"Through the discussion of Association Mapping, we know that association mapping requires a lot of foreign keys.","sidebar":"tutorialSidebar"},"mapping/base/index":{"id":"mapping/base/index","title":"Base mapping","description":"In this series of articles, we will introduce base mappings.","sidebar":"tutorialSidebar"},"mapping/base/json-converter":{"id":"mapping/base/json-converter","title":"JSON Converter","description":"Although Jimmer entities are not POJOs, Jackson serialization can be supported by org.babyish.jimmer.jackson.ImmutableModule.","sidebar":"tutorialSidebar"},"mapping/base/more-type":{"id":"mapping/base/more-type","title":"More Types","description":"In addition to boolean, number, string, UUID, date, and enumeration, scalar properties also support other types, including:","sidebar":"tutorialSidebar"},"mapping/base/naming-strategy":{"id":"mapping/base/naming-strategy","title":"Naming Strategy","description":"Naming Strategy Interface","sidebar":"tutorialSidebar"},"mapping/base/nullity":{"id":"mapping/base/nullity","title":"Nullity","description":"Jimmer handles the issue of whether entity object properties can be null in a very strict way. Even for Java developers, it requires thinking about whether each property can be null in the same way as Kotlin developers.","sidebar":"tutorialSidebar"},"mapping/index":{"id":"mapping/index","title":"Mapping","description":"In this section, we introduce how to map a relational database to entity model.","sidebar":"tutorialSidebar"},"mutation/associations":{"id":"mutation/associations","title":"Mutable Association Table","description":"Overview","sidebar":"tutorialSidebar"},"mutation/delete-command":{"id":"mutation/delete-command","title":"Delete Command","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/delete-statement":{"id":"mutation/delete-statement","title":"Delete Statement","description":"Basic Usage","sidebar":"tutorialSidebar"},"mutation/draft-interceptor":{"id":"mutation/draft-interceptor","title":"Interceptor before save","description":"Concept","sidebar":"tutorialSidebar"},"mutation/index":{"id":"mutation/index","title":"Modification","description":"In this section, we will introduce all the capabilities in Jimmer related to modifying the database.","sidebar":"tutorialSidebar"},"mutation/save-command/association/associated-save-mode":{"id":"mutation/save-command/association/associated-save-mode","title":"Associated Save Mode","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/association/classification":{"id":"mutation/save-command/association/classification","title":"Association classification","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/association/dissociation":{"id":"mutation/save-command/association/dissociation","title":"Dissociation Operations","description":"When saving associated objects using the association mode AssociatedSaveMode.REPLACE,","sidebar":"tutorialSidebar"},"mutation/save-command/association/index":{"id":"mutation/save-command/association/index","title":"Associations","description":"","sidebar":"tutorialSidebar"},"mutation/save-command/association/owner":{"id":"mutation/save-command/association/owner","title":"Owner side","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/data-classification":{"id":"mutation/save-command/data-classification","title":"Data Classification","description":"The save command is used to store data structures of any complexity. To facilitate discussion, we need to establish a basic classification of data structure shapes.","sidebar":"tutorialSidebar"},"mutation/save-command/index":{"id":"mutation/save-command/index","title":"Save Command","description":"Features","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/dto-lang":{"id":"mutation/save-command/input-dto/dto-lang","title":"Using DTO Language","description":"Jimmer provides DTO language.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/index":{"id":"mutation/save-command/input-dto/index","title":"Input DTO","description":"Although the underlying save commands are very powerful, there is still some way to go before exposing data persistence APIs externally.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/lonely":{"id":"mutation/save-command/input-dto/lonely","title":"Lonely Form","description":"This is a very crude solution, only for learning or very simple projects.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/mapstruct":{"id":"mutation/save-command/input-dto/mapstruct","title":"Using MapStruct","description":"Not recommended for Kotlin.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/null-handling":{"id":"mutation/save-command/input-dto/null-handling","title":"Handle Null Values","description":"Input DTO is used for data input, so it provides powerful control over nullable properties in the objects submitted by the client, and standardizes this capability.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/problem":{"id":"mutation/save-command/input-dto/problem","title":"Problem","description":"In this article we discuss:","sidebar":"tutorialSidebar"},"mutation/save-command/investigation":{"id":"mutation/save-command/investigation","title":"Constraint Violation Error Handling","description":"Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/mysql":{"id":"mutation/save-command/mysql","title":"MySQL Issues","description":"1. Basic Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/optimistic-locking":{"id":"mutation/save-command/optimistic-locking","title":"Optimistic Locking","description":"Discussion Prerequisites","sidebar":"tutorialSidebar"},"mutation/save-command/pessimistic-locking":{"id":"mutation/save-command/pessimistic-locking","title":"Pessimistic Locking","description":"Preparation","sidebar":"tutorialSidebar"},"mutation/save-command/save-mode":{"id":"mutation/save-command/save-mode","title":"Save Mode of Aggregate-Root","description":"Save Modes","sidebar":"tutorialSidebar"},"mutation/save-command/usage":{"id":"mutation/save-command/usage","title":"Basic Usage","description":"Introduction","sidebar":"tutorialSidebar"},"mutation/trigger":{"id":"mutation/trigger","title":"Trigger","description":"Jimmer supports triggers that allow users to listen for database changes.","sidebar":"tutorialSidebar"},"mutation/update-statement":{"id":"mutation/update-statement","title":"Update Statement","description":"Basic Usage","sidebar":"tutorialSidebar"},"object/draft":{"id":"object/draft","title":"Draft","description":"In previous documents we have seen that","sidebar":"tutorialSidebar"},"object/dynamic":{"id":"object/dynamic","title":"Dynamicity","description":"The example code in this article uses a type called BookDraft, which is an interface type automatically generated by Jimmer based on the user-defined type Book.","sidebar":"tutorialSidebar"},"object/immutable/current-situation":{"id":"object/immutable/current-situation","title":"Current Situation","description":"Java has supported immutable record types since Java 14, and Kotlin\'s data classes can easily implement immutable classes, even supporting copy functions. However, they are designed for simple immutable objects, and have problems dealing with complex deep data structure.","sidebar":"tutorialSidebar"},"object/immutable/index":{"id":"object/immutable/index","title":"Immutability","description":"Immutability is used to ensure that the data structure represented by Jimmer objects never contains circular references.","sidebar":"tutorialSidebar"},"object/immutable/reason":{"id":"object/immutable/reason","title":"Reason","description":"Unlike other ORMs, Jimmer uses immutable objects as entity objects.","sidebar":"tutorialSidebar"},"object/immutable/solution":{"id":"object/immutable/solution","title":"Solution","description":"The sample code above uses a type called TreeNodeDraft, which is the interface type automatically generated by Jimmer based on the user-defined type TreeNode.","sidebar":"tutorialSidebar"},"object/index":{"id":"object/index","title":"Object","description":"In this series of articles, we thoroughly discuss the dynamicity and immutability of Jimmer objects:","sidebar":"tutorialSidebar"},"object/jackson":{"id":"object/jackson","title":"Working with Jackson","description":"Jimmer objects are dynamic and not all properties of an object need to be initialized. It allows missing some properties.","sidebar":"tutorialSidebar"},"object/tool":{"id":"object/tool","title":"Tool Methods","description":"Jimmer provides a series of static tool methods for operating on dynamic objects or their Drafts.","sidebar":"tutorialSidebar"},"object/view/dto-language":{"id":"object/view/dto-language","title":"DTO Language","description":"1. Concepts","sidebar":"tutorialSidebar"},"object/view/index":{"id":"object/view/index","title":"DTO conversion","description":"Even if entity objects support dynamism to express arbitrary data structures, conversion between entities and DTOs is still unavoidable.","sidebar":"tutorialSidebar"},"object/view/mapstruct":{"id":"object/view/mapstruct","title":"MapStruct","description":"Introduction","sidebar":"tutorialSidebar"},"object/visibility":{"id":"object/visibility","title":"Visibility","description":"Previous documents have discussed in detail the dynamic and immutable properties of Jimmer entities. This introduces a new feature: visibility.","sidebar":"tutorialSidebar"},"overview/apt-ksp":{"id":"overview/apt-ksp","title":"APT/KSP","description":"Basic Concepts","sidebar":"tutorialSidebar"},"overview/benchmark":{"id":"overview/benchmark","title":"Benchmark Report","description":"Not only can Jimmer bring you powerful features, but it can also bring you ultimate performance.","sidebar":"tutorialSidebar"},"overview/index":{"id":"overview/index","title":"Introduction \u2605","description":"In this series of articles, we will introduce:","sidebar":"tutorialSidebar"},"overview/introduction":{"id":"overview/introduction","title":"Overview \u2726","description":"1. What is Jimmer","sidebar":"tutorialSidebar"},"overview/key-features":{"id":"overview/key-features","title":"Key Features \u2726","description":"To help readers better understand the key features, let\'s first introduce Jimmer\'s fundamental design philosophy","sidebar":"tutorialSidebar"},"overview/welcome":{"id":"overview/welcome","title":"Before Reading","description":"Where are the Examples and Getting started?","sidebar":"tutorialSidebar"},"query/associations":{"id":"query/associations","title":"Querying Association Tables","description":"Association Tables Hidden by Object Model","sidebar":"tutorialSidebar"},"query/dynamic-join/chain-style":{"id":"query/dynamic-join/chain-style","title":"Association Path Chaining","description":"How Jimmer solves the dynamic join problem will be discussed in subsequent docs. This article first introduces the join style in Jimmer.","sidebar":"tutorialSidebar"},"query/dynamic-join/index":{"id":"query/dynamic-join/index","title":"Dynamic JOIN","description":"We will introduce the following contents:","sidebar":"tutorialSidebar"},"query/dynamic-join/kotlin-join":{"id":"query/dynamic-join/kotlin-join","title":"Join Features Specific to Kotlin","description":"Dilemma","sidebar":"tutorialSidebar"},"query/dynamic-join/merge":{"id":"query/dynamic-join/merge","title":"Merge Conflict Joins","description":"Usage","sidebar":"tutorialSidebar"},"query/dynamic-join/optimization":{"id":"query/dynamic-join/optimization","title":"Optimize Unnecessary Joins","description":"Usage","sidebar":"tutorialSidebar"},"query/dynamic-join/problem":{"id":"query/dynamic-join/problem","title":"Problems with Other Solutions","description":"In the previous doc, we discussed dynamic queries. In this section, we will explore the problems with dynamic table joins.","sidebar":"tutorialSidebar"},"query/dynamic-join/table-ex":{"id":"query/dynamic-join/table-ex","title":"Pagination Safety","description":"Pagination safety is a feature designed for pagination, but table join functionality provides underlying support.","sidebar":"tutorialSidebar"},"query/dynamic-join/weak-join":{"id":"query/dynamic-join/weak-join","title":"Weak Join","description":"The Problem to Solve","sidebar":"tutorialSidebar"},"query/dynamic-order":{"id":"query/dynamic-order","title":"Dynamic Ordering","description":"Static Ordering","sidebar":"tutorialSidebar"},"query/dynamic-where":{"id":"query/dynamic-where","title":"Dynamic Filtering","description":"Basic Usage","sidebar":"tutorialSidebar"},"query/expression":{"id":"query/expression","title":"DSL Expressions","description":"Literal Expressions","sidebar":"tutorialSidebar"},"query/global-filter/index":{"id":"query/global-filter/index","title":"Global Filters","description":"Global filters are used to automatically add filtering conditions for an entity type. Most queries for the entity type will automatically have related where conditions added.","sidebar":"tutorialSidebar"},"query/global-filter/logical-deleted":{"id":"query/global-filter/logical-deleted","title":"Logical Deletion","description":"Readers cannot find anything related to global filters in this doc, because the filter required for logical deletion is built-in and hidden by Jimmer.","sidebar":"tutorialSidebar"},"query/global-filter/user-filter":{"id":"query/global-filter/user-filter","title":"Custom Filters","description":"Provide Abstract Mapped Superclass","sidebar":"tutorialSidebar"},"query/group":{"id":"query/group","title":"Aggregate & Group","description":"Aggregation","sidebar":"tutorialSidebar"},"query/implicit-subquery":{"id":"query/implicit-subquery","title":"Implicit Subquery","description":"Collection (one-to-many or many-to-many) associations often lead to the frequent use of subqueries in queries, and implicit subqueries greatly simplify such subqueries.","sidebar":"tutorialSidebar"},"query/index":{"id":"query/index","title":"Query","description":"In this section, we will introduce the various queries in Jimmer without considering Cache.","sidebar":"tutorialSidebar"},"query/native-sql":{"id":"query/native-sql","title":"Native SQL Expressions","description":"Native SQL expressions are an important feature to leverage database-specific capabilities, as database products always have proprietary features.","sidebar":"tutorialSidebar"},"query/object-fetcher/association":{"id":"query/object-fetcher/association","title":"Associations","description":"In last doc we introduced scalar property fetching. In this doc we discuss association fetching.","sidebar":"tutorialSidebar"},"query/object-fetcher/dto":{"id":"query/object-fetcher/dto","title":"Querying DTOs","description":"Previously we introduced using object fetchers to flexibly control the shape of queried data structures.","sidebar":"tutorialSidebar"},"query/object-fetcher/index":{"id":"query/object-fetcher/index","title":"Object Fetcher","description":"Concept","sidebar":"tutorialSidebar"},"query/object-fetcher/props":{"id":"query/object-fetcher/props","title":"Ordinary Properties","description":"Fetching Scalar Fields","sidebar":"tutorialSidebar"},"query/object-fetcher/recursive":{"id":"query/object-fetcher/recursive","title":"Recursive Query","description":"A common requirement is to handle self-associated property.","sidebar":"tutorialSidebar"},"query/object-fetcher/spring-data":{"id":"query/object-fetcher/spring-data","title":"Working with Spring Data","description":"We have introduced that object fetchers can flexibly control the shape of queried data structures, bringing tremendous flexibility for application development.","sidebar":"tutorialSidebar"},"query/object-fetcher/usage":{"id":"query/object-fetcher/usage","title":"Basic Usage","description":"Why Introduce Object Fetchers","sidebar":"tutorialSidebar"},"query/object-fetcher/view":{"id":"query/object-fetcher/view","title":"View Properties","description":"IdView","sidebar":"tutorialSidebar"},"query/paging/deep-optimization":{"id":"query/paging/deep-optimization","title":"Deep Pagination Optimization","description":"Pagination queries have a problem - when the data volume is large, if the pagination range is too far back (i.e. offset is too large), performance issues can occur.","sidebar":"tutorialSidebar"},"query/paging/index":{"id":"query/paging/index","title":"Smart Paging","description":"In this series of articles, we will introduce Jimmer\'s smart paging.","sidebar":"tutorialSidebar"},"query/paging/reverse-sorting":{"id":"query/paging/reverse-sorting","title":"Reverse Sorting Optimization","description":"Concept","sidebar":"tutorialSidebar"},"query/paging/unnecessary-join":{"id":"query/paging/unnecessary-join","title":"Table Join Optimization","description":"In the previous article, we mentioned that Jimmer can not only auto-generate count-query from data-query, but also auto-optimize the count-query.","sidebar":"tutorialSidebar"},"query/paging/usage":{"id":"query/paging/usage","title":"Usage","description":"Features of Jimmer Pagination","sidebar":"tutorialSidebar"},"query/sub-query":{"id":"query/sub-query","title":"Subqueries","description":"Typed Subqueries","sidebar":"tutorialSidebar"},"query/super_qbe":{"id":"query/super_qbe","title":"Super QBE","description":"Super QBE is a very powerful feature that uses DTO Language to generate parameter types for complex queries and automatically implement query logic.","sidebar":"tutorialSidebar"},"query/usage":{"id":"query/usage","title":"Overview","description":"Select-After Style","sidebar":"tutorialSidebar"},"quick-view/dsl/feature":{"id":"quick-view/dsl/feature","title":"Feature Introduction","description":"Jimmer SQL DSL","sidebar":"tutorialSidebar"},"quick-view/dsl/index":{"id":"quick-view/dsl/index","title":"3. Arbitrary Dynamic Query","description":"Jimmer supports strongly typed SQL DSL.","sidebar":"tutorialSidebar"},"quick-view/dsl/super_qbe":{"id":"quick-view/dsl/super_qbe","title":"Super QBE","description":"Can It Be Simpler","sidebar":"tutorialSidebar"},"quick-view/fetch/export/comparison":{"id":"quick-view/fetch/export/comparison","title":"Comparison","description":"The comparison is as below:","sidebar":"tutorialSidebar"},"quick-view/fetch/export/dto":{"id":"quick-view/fetch/export/dto","title":"Return Output DTO","description":"Java/Kotlin Applications Use Query Results","sidebar":"tutorialSidebar"},"quick-view/fetch/export/entity":{"id":"quick-view/fetch/export/entity","title":"Directly Return Entities","description":"Enable Web API Analysis","sidebar":"tutorialSidebar"},"quick-view/fetch/export/index":{"id":"quick-view/fetch/export/index","title":"Exposing Features","description":"Through the introduction of the previous article, we quickly previewed Jimmer\'s powerful ability to query arbitrary data structures at will.","sidebar":"tutorialSidebar"},"quick-view/fetch/feature":{"id":"quick-view/fetch/feature","title":"Feature Introduction","description":"Here is the English translation of the file, with the code indentation preserved:","sidebar":"tutorialSidebar"},"quick-view/fetch/index":{"id":"quick-view/fetch/index","title":"1. Query Arbitrary Shape","description":"Basic Concepts","sidebar":"tutorialSidebar"},"quick-view/get-started/create-database":{"id":"quick-view/get-started/create-database","title":"Create Database","description":"UML","sidebar":"tutorialSidebar"},"quick-view/get-started/create-project":{"id":"quick-view/get-started/create-project","title":"Create a Project","description":"Create a Spring Boot Project","sidebar":"tutorialSidebar"},"quick-view/get-started/define-entity":{"id":"quick-view/get-started/define-entity","title":"Define Entities","description":"Unlike ORMs like JPA/Hibernate, entities in Jimmer are defined as interfaces instead of classes. The reasons are discussed in Why Interfaces.","sidebar":"tutorialSidebar"},"quick-view/get-started/generate-code":{"id":"quick-view/get-started/generate-code","title":"Generate Code","description":"Code Generation","sidebar":"tutorialSidebar"},"quick-view/get-started/index":{"id":"quick-view/get-started/index","title":"Get Started","description":"Through the previous chapters, we already have a basic impression of Jimmer. Now we can start practicing.","sidebar":"tutorialSidebar"},"quick-view/get-started/usage":{"id":"quick-view/get-started/usage","title":"Final Usage","description":"Jimmer\'s Two Usages","sidebar":"tutorialSidebar"},"quick-view/index":{"id":"quick-view/index","title":"Quick View \u2605","description":"This section only enumerates the usage methods of the most important functions in Jimmer to allow readers to build a preliminary impression.","sidebar":"tutorialSidebar"},"quick-view/precondition":{"id":"quick-view/precondition","title":"Precondition","description":"To quickly preview Jimmer\'s main features, we need to provide several entities here as the basic assumption of all discussions in this section.","sidebar":"tutorialSidebar"},"quick-view/save/export/index":{"id":"quick-view/save/export/index","title":"Exposing Features","description":"In Save Any Shape/Feature Introduction, we introduced the powerful data saving capability of Jimmer,","sidebar":"tutorialSidebar"},"quick-view/save/export/long":{"id":"quick-view/save/export/long","title":"Save Long Associations","description":"What is Long Association","sidebar":"tutorialSidebar"},"quick-view/save/export/root":{"id":"quick-view/save/export/root","title":"Save Aggregate Root","description":"Overview","sidebar":"tutorialSidebar"},"quick-view/save/export/short":{"id":"quick-view/save/export/short","title":"Save Short Associations","description":"What is Short Association","sidebar":"tutorialSidebar"},"quick-view/save/feature":{"id":"quick-view/save/feature","title":"Feature Introduction","description":"Concept","sidebar":"tutorialSidebar"},"quick-view/save/index":{"id":"quick-view/save/index","title":"2. Save Arbitrary Shape","description":"The save directive is a very powerful capability of Jimmer. With just one function call, data structures of any shape can be saved.","sidebar":"tutorialSidebar"},"quick-view/standard-demo":{"id":"quick-view/standard-demo","title":"Standard Examples","description":"Through the previous chapters:","sidebar":"tutorialSidebar"},"resource/discuss":{"id":"resource/discuss","title":"Discuss","description":"https://discord.gg/PmgR5mpY3E","sidebar":"tutorialSidebar"},"resource/ecosystem":{"id":"resource/ecosystem","title":"Ecosystem","description":"Jimmer focuses only on the ORM itself and does not provide auxiliary tools, such as generating entity interface definitions based on the database structure.","sidebar":"tutorialSidebar"},"resource/index":{"id":"resource/index","title":"Resources","description":"","sidebar":"tutorialSidebar"},"resource/video":{"id":"resource/video","title":"Video","description":"TODO","sidebar":"tutorialSidebar"},"showcase/base":{"id":"showcase/base","title":"1. Basic Query","description":"There are two concepts in Jimmer","sidebar":"tutorialSidebar"},"showcase/comprehensive-query":{"id":"showcase/comprehensive-query","title":"7. Comprehensive Query","description":"So far, we\'ve quickly demonstrated the following features","sidebar":"tutorialSidebar"},"showcase/delete-statement":{"id":"showcase/delete-statement","title":"10. Delete statement","description":"","sidebar":"tutorialSidebar"},"showcase/fetch-association/associated-id":{"id":"showcase/fetch-association/associated-id","title":"2.4 Associated Id","description":"Unlike the previous example, here we only need to fetch the associated object id, not the entire associated object.","sidebar":"tutorialSidebar"},"showcase/fetch-association/associated-object":{"id":"showcase/fetch-association/associated-object","title":"2.1 Associated Object","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/fetch-association/deeper-association":{"id":"showcase/fetch-association/deeper-association","title":"2.3 Deeper Association","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/fetch-association/index":{"id":"showcase/fetch-association/index","title":"2. Fetch Associations","description":"","sidebar":"tutorialSidebar"},"showcase/fetch-association/more-association":{"id":"showcase/fetch-association/more-association","title":"2.2 More Associations","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/index":{"id":"showcase/index","title":"Showcase \u2605","description":"","sidebar":"tutorialSidebar"},"showcase/order-by/dynamic":{"id":"showcase/order-by/dynamic","title":"5.2 Dynamic Sorting","description":"Dynamic sorting refers to the sorting method being dynamically specified by the client.","sidebar":"tutorialSidebar"},"showcase/order-by/index":{"id":"showcase/order-by/index","title":"5. Sorting","description":"","sidebar":"tutorialSidebar"},"showcase/order-by/usage":{"id":"showcase/order-by/usage","title":"5.1 Basic Usage","description":"Multiple orderBy actions","sidebar":"tutorialSidebar"},"showcase/other-query":{"id":"showcase/other-query","title":"8. Other Queries","description":"\u6807\u51c6\u5b50\u67e5\u8be2","sidebar":"tutorialSidebar"},"showcase/page":{"id":"showcase/page","title":"6. Paging Query","description":"Two types of Page objects","sidebar":"tutorialSidebar"},"showcase/recursive-query/depth":{"id":"showcase/recursive-query/depth","title":"3.2 Limit Depth","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/recursive-query/index":{"id":"showcase/recursive-query/index","title":"3. Recursive Query","description":"","sidebar":"tutorialSidebar"},"showcase/recursive-query/multiple-props":{"id":"showcase/recursive-query/multiple-props","title":"3.4 Multiple Properties","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/recursive-query/node-control":{"id":"showcase/recursive-query/node-control","title":"3.2 Control Recursion Of Node","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/recursive-query/usage":{"id":"showcase/recursive-query/usage","title":"3.1 Basic usage","description":"Query Dynamic Entities","sidebar":"tutorialSidebar"},"showcase/to-be-conitnued":{"id":"showcase/to-be-conitnued","title":"X. To be Continued...","description":"In the past few months, save command has been undergoing a major restructuring, so it has not been written.","sidebar":"tutorialSidebar"},"showcase/update-statement":{"id":"showcase/update-statement","title":"9. Update statement","description":"","sidebar":"tutorialSidebar"},"showcase/where/associated-id":{"id":"showcase/where/associated-id","title":"4.3 Associated Id","description":"IsNull\u5224\u65ad","sidebar":"tutorialSidebar"},"showcase/where/dynamic-join":{"id":"showcase/where/dynamic-join","title":"4.4 Dynamic Table Join","description":"Usage","sidebar":"tutorialSidebar"},"showcase/where/dynamic-where":{"id":"showcase/where/dynamic-where","title":"4.2 Dynamic Conditions","description":"Using whereIf","sidebar":"tutorialSidebar"},"showcase/where/implicit-subquery":{"id":"showcase/where/implicit-subquery","title":"4.5 Implicit Subquery","description":"Implicit subqueries can only be used for collection associations. This article discusses implicit subqueries through the many-to-many Book.authors.","sidebar":"tutorialSidebar"},"showcase/where/index":{"id":"showcase/where/index","title":"4. Where","description":"","sidebar":"tutorialSidebar"},"showcase/where/usage":{"id":"showcase/where/usage","title":"4.1 Base Usage","description":"The following three ways of writing are equivalent","sidebar":"tutorialSidebar"},"spring/appendix":{"id":"spring/appendix","title":"Appendix","description":"Jimmer has many configurations, some of which can be configured in Spring Boot\'s application.yml or application.properties. Such as:","sidebar":"tutorialSidebar"},"spring/index":{"id":"spring/index","title":"Spring","description":"Jimmer itself is highly neutral and does not couple with any container framework, but can easily integrate with any container framework.","sidebar":"tutorialSidebar"},"spring/repository/abstract":{"id":"spring/repository/abstract","title":"Simple Queries","description":"Just like other Spring Data implementations, users can define abstract methods in the Repository interface. As long as the names, parameters and return values of these methods follow conventions, Jimmer implements them automatically. For example:","sidebar":"tutorialSidebar"},"spring/repository/concept":{"id":"spring/repository/concept","title":"Define Repository","description":"Jimmer integrates spring data and provides a base repository interface for Java and Kotlin users respectively.","sidebar":"tutorialSidebar"},"spring/repository/default":{"id":"spring/repository/default","title":"Complex Queries","description":"In the previous document, we introduced adding abstract methods to custom Repository interfaces following certain conventions, which are implemented automatically by Jimmer.","sidebar":"tutorialSidebar"},"spring/repository/dto":{"id":"spring/repository/dto","title":"Query DTO","description":"Jimmer provides DTO language.","sidebar":"tutorialSidebar"},"spring/repository/index":{"id":"spring/repository/index","title":"Spring Data","description":"Jimmer provides Spring Data Repository style APIs, so you can:","sidebar":"tutorialSidebar"},"spring/spring-cloud":{"id":"spring/spring-cloud","title":"Remote Associations","description":"Remote associations are Jimmer\'s first thoughts on microservice architecture.","sidebar":"tutorialSidebar"},"spring/transaction":{"id":"spring/transaction","title":"Spring Transaction","description":"Integrate Spring Transaction","sidebar":"tutorialSidebar"}}}}')}}]);