"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[9733],{57356:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"query/super_qbe","title":"Super QBE","description":"Super QBE is a very powerful feature that uses DTO Language to generate parameter types for complex queries and automatically implement query logic.","source":"@site/docs/query/super_qbe.mdx","sourceDirName":"query","slug":"/query/super_qbe","permalink":"/jimmer-doc/docs/query/super_qbe","draft":false,"unlisted":false,"editUrl":"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/query/super_qbe.mdx","tags":[],"version":"current","lastUpdatedAt":1757522919000,"sidebarPosition":15,"frontMatter":{"sidebar_position":15,"title":"Super QBE"},"sidebar":"tutorialSidebar","previous":{"title":"Querying Association Tables","permalink":"/jimmer-doc/docs/query/associations"},"next":{"title":"Modification","permalink":"/jimmer-doc/docs/mutation/"}}');var s=i(74848),o=i(28453),a=i(11470),l=i(19365);const r={sidebar_position:15,title:"Super QBE"},c=void 0,d={},h=[{value:"Create File",id:"create-file",level:2},{value:"Define Specification Type",id:"define-specification-type",level:2},{value:"Compiled Code",id:"compiled-code",level:3},{value:"Usage",id:"usage",level:3},{value:"Attribute Mapping",id:"attribute-mapping",level:2},{value:"Map Attributes",id:"map-attributes",level:3},{value:"Nullability",id:"nullability",level:3},{value:"Usage",id:"usage-1",level:3},{value:"QBE Functions",id:"qbe-functions",level:2},{value:"Introduction to QBE Functions",id:"introduction-to-qbe-functions",level:3},{value:"like Function Options",id:"like-function-options",level:3},{value:"All QBE Functions",id:"all-qbe-functions",level:3},{value:"Comprehensive Example",id:"comprehensive-example",level:3},{value:"Associated Objects",id:"associated-objects",level:2},{value:"Logical OR",id:"logical-or",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Super QBE is a very powerful feature that uses ",(0,s.jsx)(n.a,{href:"../object/view/dto-language",children:"DTO Language"})," to generate parameter types for complex queries and automatically implement query logic."]}),"\n",(0,s.jsx)(n.h2,{id:"create-file",children:"Create File"}),"\n",(0,s.jsxs)(n.p,{children:["In any project that can access entity types, create the ",(0,s.jsx)(n.code,{children:"src/main/dto"})," directory, and create the ",(0,s.jsx)(n.code,{children:"Book.dto"})," file in this directory."]}),"\n",(0,s.jsxs)(n.p,{children:["For Java projects, if the current project is not the project that defines the entity type, you need to add the ",(0,s.jsx)(n.code,{children:"@EnableDtoGeneration"})," annotation to any class in the current project."]}),"\n",(0,s.jsx)(n.p,{children:"Add the following code to the head of the file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"export com.yourcompany.yourproject.model.Book\n    -> package com.yourcompany.yourproject.dto\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above steps, as well as how to compile DTO files, are discussed in detail in ",(0,s.jsx)(n.a,{href:"../object/view/dto-language#2-create-file",children:"DTO Language #2. Create File"}),", and will not be repeated here."]}),"\n",(0,s.jsx)(n.h2,{id:"define-specification-type",children:"Define Specification Type"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted... \n\nspecification BookSpecification {\n\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"compiled-code",children:"Compiled Code"}),"\n",(0,s.jsx)(n.p,{children:"After compilation, Java/Kotlin code like this will be generated:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="BookSpecification.java"',children:"package com.yourcompany.yourproject.dto;\n\nimport org.babyfish.jimmer.sql.ast.query.specification.JSpecification;\nimport org.babyfish.jimmer.sql.ast.query.specification.SpecificationArgs;\n...other imports omitted...\n\npublic class BookSpecification implements JSpecification<Book, BookTable> {\n\n    @Override\n    public void applyTo(SpecificationArgs<Book, BookTable> args) {}\n}\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",metastring:'title="BookSpecification.kt" ',children:"package com.yourcompany.yourproject.dto;\n\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecification\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecificationArgs\n...other imports omitted...\n\ndata class BookSpecification(\n    // Now data class has no fields, will cause compile error  \n) : KSpecification<Book> {\n\n    override fun applyTo(args: KSpecificationArgs<Book>) {}\n}\n"})})})]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"applyTo"})," is a method specific to the compiled specification code. It dynamically adds where conditions to Jimmer queries according to the information of the current object."]}),(0,s.jsxs)(n.p,{children:["This method does not require user invocation ",(0,s.jsx)(n.em,{children:"(invoked by internal Jimmer behaviors)"}),", and users do not need to care about its internal code implementation. Just knowing what this method does is enough here."]})]}),"\n",(0,s.jsxs)(n.p,{children:["In subsequent discussions, we will gradually add properties to ",(0,s.jsx)(n.code,{children:"BookSpecification"})," in the DTO file."]}),"\n",(0,s.jsxs)(n.p,{children:["Accordingly, for the automatically generated ",(0,s.jsx)(n.code,{children:"BookSpecification"})," class, on the one hand, properties will be added synchronously, on the other hand, the code in the ",(0,s.jsx)(n.code,{children:"applyTo"})," method will also grow."]}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use in queries"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public List<Book> find(\n    // highlight-next-line  \n    Specification<Book> specification \u2776\n) {\n    \n    BookTable table = Tables.BOOK_TABLE;\n    \n    return sqlClient\n        .createQuery(table)\n        // highlight-next-line\n        .where(specification) \u2777\n        .select(table)\n        .execute();\n}\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"fun find(\n    // highlight-next-line\n    specification: Specification<Book> \u2776\n): List<Book> =\n    sqlClient.createQuery(Book::class) {\n        // highlight-next-line\n        where(specification) \u2777\n        select(table)\n    }.execute()\n"})})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2776 The argument whose type is ",(0,s.jsx)(n.code,{children:"org.babyfish.jimmer.Specification<Book>"})," type, which is used to generate dynamic SQL predicates."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2777 No matter how simple or complex the ",(0,s.jsx)(n.code,{children:"specification"})," format is, it can be used with just a simple ",(0,s.jsx)(n.code,{children:"where"})," statement."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use in Spring Data Repository"}),"\n",(0,s.jsxs)(n.p,{children:["Jimmer integrates Spring Data, so Spring Data Repository can be defined, please refer to ",(0,s.jsx)(n.a,{href:"../spring/repository",children:"Spring Data Style"})," to learn more."]}),"\n",(0,s.jsx)(n.p,{children:"Jimmer's Spring Data Repository has two query styles, abstract methods and default methods. The code using specification in default methods is the same as above, so let's look at an example of using specification in abstract query methods:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public interface BookRepository : JRepository<Book, Long> {\n\n    public List<Book> find(\n        // highlight-next-line\n        Specification<Book> specification\n    )\n}\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"interface BookRepository : KRepository<Book, Long> {\n\n    fun find(\n        // highlight-next-line\n        specification: Specification<Book>\n    ): List<Book>\n}\n"})})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"attribute-mapping",children:"Attribute Mapping"}),"\n",(0,s.jsx)(n.h3,{id:"map-attributes",children:"Map Attributes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...\n\nspecification BookSpecification {\n    #highlight-next-line\n    name\n} \n"})}),"\n",(0,s.jsx)(n.p,{children:"This maps entity properties to DTOs. The generated code is:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="BookSpecification.java"',children:"public class BookSpecification implements JSpecification<Book, BookTable> {\n\n    @Nullable\n    // highlight-next-line\n    private String name;\n\n    ...getters and setters omitted...\n\n    @Override\n    public void applyTo(SpecificationArgs<Book, BookTable> args) {\n        ...omitted...\n    }\n}\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",metastring:'title="BookSpecification.kt"',children:"package com.yourcompany.yourproject.dto;\n\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecification\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecificationArgs\n...other imports omitted...\n\ndata class BookSpecification(\n    // highlight-next-line\n    val name: String? = null\n) : KSpecification<Book> {\n\n    override fun applyTo(args: KSpecificationArgs<Book>) {\n        ...omitted... \n    }\n}\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"nullability",children:"Nullability"}),"\n",(0,s.jsxs)(n.p,{children:["We find that in the generated code, the ",(0,s.jsx)(n.code,{children:"name"})," field can be null, which is where the specialty of specification lies."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Specifications are used as query parameters. To support dynamic queries, all properties are nullable by default unless explicitly specified as non-nullable using ",(0,s.jsx)(n.code,{children:"!"})," ",(0,s.jsxs)(n.em,{children:["(see ",(0,s.jsx)(n.a,{href:"../object/view/dto-language#7-nullability",children:"DTO Language #7. Nullability"}),")"]}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Let the ",(0,s.jsx)(n.code,{children:"name"})," field of BookSpecification be null"]}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"BookSpecification specification = new BookSpecification();\nList<Book> books = bookRepository.find(specification);\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"val specification = BookSpecification()\nval books = bookRepository.find(specification) \n"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["Since ",(0,s.jsx)(n.code,{children:"specification.name"})," is null, the generated SQL does not contain any ",(0,s.jsx)(n.code,{children:"where"})," conditions."]}),"\n",(0,s.jsx)(n.p,{children:"The generated SQL is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_ \nwhere tb_1_.NAME = ?\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"Such queries that do not specify relevant specification properties will inevitably lead to queries without any conditions."}),(0,s.jsx)(n.p,{children:"This example is only demonstrated once in this article."})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Make the ",(0,s.jsx)(n.code,{children:"name"})," field of BookSpecification non-null"]}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'BookSpecification specification = new BookSpecification();\n// highlight-next-line\nspecification.setName("GraphQL in Action");\nList<Book> books = bookRepository.find(specification);\n'})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val specification = BookSpecification(\n    // highlight-next-line\n    name = "GraphQL in Action"\n)\nval books = bookRepository.find(specification)\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"The generated SQL is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_\n/* highlight-next-line */    \nwhere tb_1_.NAME = ? /* GraphQL in Action */\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"qbe-functions",children:"QBE Functions"}),"\n",(0,s.jsx)(n.h3,{id:"introduction-to-qbe-functions",children:"Introduction to QBE Functions"}),"\n",(0,s.jsxs)(n.p,{children:["In the code above, when ",(0,s.jsx)(n.code,{children:"specification.name"})," is specified, the generated ",(0,s.jsx)(n.code,{children:"where"})," condition is equality."]}),"\n",(0,s.jsxs)(n.p,{children:["Equality is not necessarily what we need. QBE functions can be applied to mapped properties to change the operator. Take ",(0,s.jsx)(n.code,{children:"like"})," as an example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...\n\nspecification BookSpecification {\n    #highlight-next-line\n    like(name)\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The like function does not affect the properties of the generated ",(0,s.jsx)(n.code,{children:"BookSpecification"})," class, but affects its ",(0,s.jsx)(n.code,{children:"applyTo"})," method, whose internal implementation is the ",(0,s.jsx)(n.code,{children:"where"})," condition addition logic that users do not need to care about."]}),"\n",(0,s.jsx)(n.p,{children:"Execute:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'BookSpecification specification = new BookSpecification();\n// highlight-next-line  \nspecification.setName("GraphQL");\nList<Book> books = bookRepository.find(specification);\n'})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val specification = BookSpecification(\n    // highlight-next-line\n    name = "GraphQL" \n)\nval books = bookRepository.find(specification)\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"The generated SQL is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_\n/* highlight-next-line */  \nwhere tb_1_.NAME like ? /* %GraphQL% */\n"})}),"\n",(0,s.jsx)(n.h3,{id:"like-function-options",children:"like Function Options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"like"})," is a special one among all QBE functions, supporting 3 options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"i: Case insensitive"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["^: Exact match at the beginning ",(0,s.jsxs)(n.em,{children:["(Jimmer does not automatically add ",(0,s.jsx)(n.code,{children:"%"})," before the parameter value)"]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["$: Exact match at the end ",(0,s.jsxs)(n.em,{children:["(Jimmer does not automatically add ",(0,s.jsx)(n.code,{children:"%"})," after the parameter value)"]})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If options are needed, ",(0,s.jsx)(n.code,{children:"/"})," can be added after ",(0,s.jsx)(n.code,{children:"like"}),", followed by the required options. Such as: ",(0,s.jsx)(n.code,{children:"like/i"}),", ",(0,s.jsx)(n.code,{children:"like/^"}),", ",(0,s.jsx)(n.code,{children:"like/$"}),", ",(0,s.jsx)(n.code,{children:"like/i^"}),", ",(0,s.jsx)(n.code,{children:"like/i$"}),", and ",(0,s.jsx)(n.code,{children:"like/i^$"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Although ",(0,s.jsx)(n.code,{children:"i"}),", ",(0,s.jsx)(n.code,{children:"^"})," and ",(0,s.jsx)(n.code,{children:"$"})," are optional, their order is fixed."]})}),"\n",(0,s.jsxs)(n.p,{children:["Let's try case-insensitive ",(0,s.jsx)(n.code,{children:"like"})," by modifying the DTO code as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...   \n\nspecification BookSpecification {\n    #highlight-next-line\n    like/i(name)\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute the code above again, the following SQL is executed:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Databases that do not support ",(0,s.jsx)(n.code,{children:"ilike"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID \nfrom BOOK tb_1_\n/* highlight-next-line */\nwhere lower(tb_1_.NAME) like ? /* %graphql% */\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Databases that support ",(0,s.jsx)(n.code,{children:"ilike"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_ \n/* highlight-next-line */  \nwhere tb_1_.NAME ilike ? /* %graphql% */\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"all-qbe-functions",children:"All QBE Functions"}),"\n",(0,s.jsxs)(n.p,{children:["In fact, in addition to ",(0,s.jsx)(n.code,{children:"like"}),", speciation supports a large number of QBE functions covering common SQL judgments, as shown in the table below:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"QBE Function"}),(0,s.jsxs)(n.th,{children:["Original Entity Attribute Type ",(0,s.jsx)(n.em,{children:"(or Requirement)"})]}),(0,s.jsx)(n.th,{children:"Generated DTO Class Attribute Type"}),(0,s.jsx)(n.th,{children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"eq"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Equal, equivalent to not using any QBE function"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ne"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Not equal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"gt"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Greater than"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ge"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Greater than or equal to"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"lt"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Less than"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"le"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"Original type"}),(0,s.jsx)(n.td,{children:"Less than or equal to"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"like"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Fuzzy match"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"notLike"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Fuzzy mismatch"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"null"}),(0,s.jsx)(n.td,{children:"Any property"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"is null judgment if DTO property is true"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"notNull"}),(0,s.jsx)(n.td,{children:"Any property"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"is not null judgment if DTO property is true"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"valueIn"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"List<Original type>"}),(0,s.jsx)(n.td,{children:"in(...)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"valueNotIn"}),(0,s.jsx)(n.td,{children:"Any non-associative property"}),(0,s.jsx)(n.td,{children:"List<Original type>"}),(0,s.jsx)(n.td,{children:"not in(...)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdEq"}),(0,s.jsx)(n.td,{children:"Any associative property"}),(0,s.jsx)(n.td,{children:"Type of associated entity's id property"}),(0,s.jsxs)(n.td,{children:["Associated id = ?. Note that it is equivalent to ",(0,s.jsx)(n.code,{children:"id"})," ",(0,s.jsx)(n.em,{children:"(inherent DTO language function)"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdNe"}),(0,s.jsx)(n.td,{children:"Any associative property"}),(0,s.jsx)(n.td,{children:"Type of associated entity's id property"}),(0,s.jsx)(n.td,{children:"Associated id <> ?"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdIn"}),(0,s.jsx)(n.td,{children:"Any associative property"}),(0,s.jsx)(n.td,{children:"List<Type of associated entity's id property>"}),(0,s.jsx)(n.td,{children:"Associated id in(...)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdNotIn"}),(0,s.jsx)(n.td,{children:"Any associative property"}),(0,s.jsx)(n.td,{children:"List<Type of associated entity's id property>"}),(0,s.jsx)(n.td,{children:"Associated id not in(...)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"comprehensive-example",children:"Comprehensive Example"}),"\n",(0,s.jsx)(n.p,{children:"Modify the DTO code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...\n\nspecification BookSpecification {\n    like/i(name)\n    ge(price) \n    le(price)\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ge(price)"})," will specify the default alias ",(0,s.jsx)(n.code,{children:"minPrice"}),", ",(0,s.jsx)(n.code,{children:"le(price)"})," will specify the default alias ",(0,s.jsx)(n.code,{children:"maxPrice"}),", so the above code can also be written as:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...  \n\nspecification BookSpecification {\n    like/i(name)\n    ge(price) as minPrice\n    le(price) as maxPrice\n} \n"})}),"\n",(0,s.jsx)(n.p,{children:"As you can see, some QBE functions have built-in default alias functionality."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Assuming the original property name is ",(0,s.jsx)(n.code,{children:"Prop"})]}),", the default alias behaviors of all QBE functions are as follows:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"QBE Function"}),(0,s.jsx)(n.th,{children:"Default alias"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["eq ",(0,s.jsx)(n.em,{children:"(or no QBE function specified)"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"prop"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ne"}),(0,s.jsx)(n.td,{children:"Not supported, no alias specified will cause compile error"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"gt"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"minPropExclusive"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ge"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"minProp"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"lt"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"maxPropExclusive"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"le"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"maxProp"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"like"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"prop"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"notLike"}),(0,s.jsx)(n.td,{children:"Not supported, no alias specified will cause compile error"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"valueIn"}),(0,s.jsx)(n.td,{children:"Not supported, no alias specified will cause compile error"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"valueNotIn"}),(0,s.jsx)(n.td,{children:"Not supported, no alias specified will cause compile error"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdEq or id"}),(0,s.jsxs)(n.td,{children:["If the association is a reference ",(0,s.jsx)(n.em,{children:"(non-collection)"}),", ",(0,s.jsx)(n.code,{children:"propId"}),"; otherwise, compile error"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdNe"}),(0,s.jsxs)(n.td,{children:["If the association is a reference ",(0,s.jsx)(n.em,{children:"(non-collection)"}),", ",(0,s.jsx)(n.code,{children:"excludedPropId"}),"; otherwise, compile error"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdIn"}),(0,s.jsxs)(n.td,{children:["If the association is a reference ",(0,s.jsx)(n.em,{children:"(non-collection)"}),", ",(0,s.jsx)(n.code,{children:"propIds"}),"; otherwise, compile error"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"associatedIdNotNull"}),(0,s.jsxs)(n.td,{children:["If the association is a reference ",(0,s.jsx)(n.em,{children:"(non-collection)"}),", ",(0,s.jsx)(n.code,{children:"excludedPropIds"}),"; otherwise, compile error"]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"The compiled code is:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="BookSpecification.java"',children:"public class BookSpecification implements JSpecification<Book, BookTable> {\n\n    @Nullable\n    private String name;\n\n    @Nullable  \n    private BigDecimal minPrice;\n\n    @Nullable\n    private BigDecimal maxPrice;\n\n    ...getters and setters omitted...\n\n    @Override\n    public void applyTo(SpecificationArgs<Book, BookTable> args) {\n        ...omitted...\n    }\n}\n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",metastring:'title="BookSpecification.kt"',children:"package com.yourcompany.yourproject.dto;\n\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecification\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecificationArgs  \n...other imports omitted...  \n\ndata class BookSpecification(\n    val name: String? = null,\n    val minPrice: BigDecimal? = null,\n    val maxPrice: BigDecimal? = null\n) : KSpecification<Book> {\n\n    override fun applyTo(args: KSpecificationArgs<Book>) {\n        ...omitted...\n    }\n}\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Execute:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'BookSpecification specification = new BookSpecification();\nspecification.setName("GraphQL");\nspecification.setMinPrice(new BigDecimal(40));  \nspecification.setMaxPrice(new BigDecimal(40));\nList<Book> books = bookRepository.find(specification);\n'})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val specification = BookSpecification(\n    name = "GraphQL",\n    minPrice = BigDecimal(40),\n    maxPrice = BigDecimal(60)  \n)\nval books = bookRepository.find(specification)\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"The generated SQL is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_  \nwhere\n        lower(tb_1_.NAME) like ? /* %graphql% */  \n    and \n        tb_1_.PRICE >= ? /* 40 */\n    and\n        tb_1_.PRICE <= ? /* 60 */\norder by\n    tb_1_.NAME asc,\n    tb_1_.EDITION desc\n"})}),"\n",(0,s.jsx)(n.h2,{id:"associated-objects",children:"Associated Objects"}),"\n",(0,s.jsx)(n.p,{children:"In previous examples, all filtering rules are for fields of the current table. Now let's filter on associated objects. Modify the DTO file as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...  \n\nspecification BookSpecification {\n    like/i(name)\n    ge(price)\n    le(price)\n    #highlight-next-line\n    flat(store) { \u2776\n        like/i(name) as storeName\n    }\n    #highlight-next-line\n    flat(authors) { \u2777\n        like/i(firstName) as authorName \n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We find that the code above uses the ",(0,s.jsx)(n.code,{children:"flat"})," function. The ",(0,s.jsx)(n.code,{children:"flat"})," function is discussed in detail in ",(0,s.jsx)(n.a,{href:"../object/view/dto-language#104-flat-function",children:"DTO Language #10.4-flat function"}),", and will not be repeated here."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Since ",(0,s.jsx)(n.code,{children:"specification"})," serves as a parameter for complex queries, it is very likely to be HTTP GET parameters. Using the ",(0,s.jsx)(n.code,{children:"flat"})," function to eliminate associations and generate flattened DTO objects is more beneficial for developing HTTP GET APIs based on Spring MVC."]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2776 ",(0,s.jsx)(n.code,{children:"Book.store"})," is a reference association"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2777 ",(0,s.jsx)(n.code,{children:"Book.authors"})," is a collection association"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The compiled code is:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="BookSpecification.java"',children:"public class BookSpecification implements JSpecification<Book, BookTable> {\n\n    @Nullable\n    private String name;\n\n    @Nullable\n    private BigDecimal minPrice;\n\n    @Nullable\n    private BigDecimal maxPrice;\n\n    @Nullable\n    private String storeName;\n\n    @Nullable\n    private String authorName;\n\n    ...getters and setters omitted... \n\n    @Override\n    public void applyTo(SpecificationArgs<Book, BookTable> args) {\n        ...omitted...\n    }\n} \n"})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",metastring:'title="BookSpecification.kt"',children:"package com.yourcompany.yourproject.dto;\n\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecification\nimport org.babyfish.jimmer.sql.kt.ast.query.specification.KSpecificationArgs\n...other imports omitted...\n\ndata class BookSpecification(\n    val name: String? = null,\n    val minPrice: BigDecimal? = null,\n    val maxPrice: BigDecimal? = null, \n    val storeName: String? = null,\n    val authorName: String? = null\n) : KSpecification<Book> {\n\n    override fun applyTo(args: KSpecificationArgs<Book>) {\n        ...omitted...\n    }\n} \n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Execute:"}),"\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'BookSpecification specification = new BookSpecification();\nspecification.setStoreName("MANNING");\nspecification.setAuthorName("a");\nList<Book> books = bookRepository.find(specification);\n'})})}),(0,s.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'val specification = BookSpecification(\n    storeName = "MANNING",\n    authorName = "a"  \n)\nval books = bookRepository.find(specification)\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"The generated SQL is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID\nfrom BOOK tb_1_ \n/* highlight-next-line */  \ninner join BOOK_STORE tb_2_ /* \u2776 */\n    on tb_1_.STORE_ID = tb_2_.ID\nwhere\n        tb_2_.NAME ilike ? /* %manning% */  \n    and\n        /* highlight-next-line */\n        exists( /* \u2777 */\n            select \n                1\n            from AUTHOR tb_3_\n            inner join BOOK_AUTHOR_MAPPING tb_4_ \n                on tb_3_.ID = tb_4_.AUTHOR_ID\n            where\n                    tb_1_.ID = tb_4_.BOOK_ID\n                and  \n                    tb_3_.FIRST_NAME ilike ? /* %a% */\n                        \n        )\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2776 ",(0,s.jsx)(n.code,{children:"Book.store"})," is a reference association that does not break ",(0,s.jsx)(n.a,{href:"./dynamic-join/table-ex",children:"pagination safety"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["So only ",(0,s.jsx)(n.a,{href:"./dynamic-join/",children:"dynamic JOIN"})," is needed to apply the filtering condition represented by the ",(0,s.jsx)(n.code,{children:"storeName"})," property of the DTO object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u2777 ",(0,s.jsx)(n.code,{children:"Book.authors"})," is a collection association that breaks ",(0,s.jsx)(n.a,{href:"./dynamic-join/table-ex",children:"pagination safety"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["So ",(0,s.jsx)(n.a,{href:"./sub-query",children:"subqueries"})," must be used instead of ",(0,s.jsx)(n.a,{href:"./dynamic-join/",children:"dynamic JOIN"})," to apply the filtering condition represented by the ",(0,s.jsx)(n.code,{children:"authorName"})," property of the DTO object."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"logical-or",children:"Logical OR"}),"\n",(0,s.jsxs)(n.p,{children:["In previous examples, Jimmer generates multiple ",(0,s.jsx)(n.code,{children:"where"})," conditions according to each property of the DTO object, and the relationship between these conditions is logical AND. But can logical OR be supported?"]}),"\n",(0,s.jsxs)(n.p,{children:["In addition, the entity type ",(0,s.jsx)(n.code,{children:"Author"})," has the ",(0,s.jsx)(n.code,{children:"lastName"})," property in addition to the ",(0,s.jsx)(n.code,{children:"firstName"})," property. Mapping only ",(0,s.jsx)(n.code,{children:"firstName"})," to ",(0,s.jsx)(n.code,{children:"authorName"})," in the previous example does not seem reasonable. Is there a better way?"]}),"\n",(0,s.jsx)(n.p,{children:"The above two issues are the same issue. To solve this problem, Super QBE supports logical OR, also known as multi-property mapping."}),"\n",(0,s.jsx)(n.p,{children:"Modify the DTO code as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"...export statement omitted...\n\nspecification BookSpecification {\n    like/i(name)\n    ge(price)\n    le(price)\n    flat(store) {\n        like/i(name) as storeName\n    }\n    flat(authors) {\n        // highlight-next-line\n        like/i(firstName, lastName) as authorName\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Here, the DTO property ",(0,s.jsx)(n.code,{children:"authorName"})," maps two properties, ",(0,s.jsx)(n.code,{children:"firstName"})," and ",(0,s.jsx)(n.code,{children:"lastName"}),". This is called multi-property mapping."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Multi-property mapping can only be used in ",(0,s.jsx)(n.code,{children:"specification"})," and cannot be used in other types described in ",(0,s.jsx)(n.a,{href:"../object/view/dto-language",children:"DTO Language"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The types of multiple properties mapped by QBE functions must be completely consistent ",(0,s.jsx)(n.em,{children:"(but nullability is allowed to differ)"}),". For example, both ",(0,s.jsx)(n.code,{children:"firstName"})," and ",(0,s.jsx)(n.code,{children:"lastName"})," here are of type ",(0,s.jsx)(n.code,{children:"String"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The DTO property of multi-property mapping must be aliased via ",(0,s.jsx)(n.code,{children:"as"}),", otherwise compilation errors will occur."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Not all QBE functions support multi-property mapping. QBE functions that support multi-property mapping are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"eq"}),"\n",(0,s.jsx)(n.li,{children:"ne"}),"\n",(0,s.jsx)(n.li,{children:"null"}),"\n",(0,s.jsx)(n.li,{children:"notNull"}),"\n",(0,s.jsx)(n.li,{children:"valueIn"}),"\n",(0,s.jsx)(n.li,{children:"associatedIdEq"}),"\n",(0,s.jsx)(n.li,{children:"associatedIdIn"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Allowing all QBE functions to support multi-property mapping blindly would lead to ambiguous understanding. So there is this restriction."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Repeating the query in the previous example generates the following SQL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION, tb_1_.PRICE, tb_1_.STORE_ID \nfrom BOOK tb_1_\ninner join BOOK_STORE tb_2_\n    on tb_1_.STORE_ID = tb_2_.ID\nwhere\n        tb_2_.NAME ilike ? /* %manning% */\n    and\n        exists(\n            select\n                1 \n            from AUTHOR tb_3_\n            inner join BOOK_AUTHOR_MAPPING tb_4_\n                on tb_3_.ID = tb_4_.AUTHOR_ID\n            where  \n                    tb_1_.ID = tb_4_.BOOK_ID\n                and\n                    (\n                        tb_3_.FIRST_NAME ilike ? /* %a% */  \n                    /* highlight-next-line */  \n                        or\n                        tb_3_.LAST_NAME ilike ? /* %a% */\n                    )\n        )\n"})}),"\n",(0,s.jsx)(n.p,{children:"It is not difficult to see that multi-property mapping is logical OR."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},19365:(e,n,i)=>{i.d(n,{A:()=>a});i(96540);var t=i(34164);const s={tabItem:"tabItem_Ymn6"};var o=i(74848);function a(e){let{children:n,hidden:i,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,a),hidden:i,children:n})}},11470:(e,n,i)=>{i.d(n,{A:()=>k});var t=i(96540),s=i(34164),o=i(23104),a=i(56347),l=i(205),r=i(57485),c=i(31682),d=i(70679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:s}}=e;return{value:n,label:i,attributes:t,default:s}}))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function u(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:i}=e;const s=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,r.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(s.location.search);n.set(o,e),s.replace({...s.location,search:n.toString()})}),[o,s])]}function j(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,o=p(e),[a,r]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[c,h]=x({queryString:i,groupId:s}),[j,m]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,o]=(0,d.Dv)(i);return[s,(0,t.useCallback)((e=>{i&&o.set(e)}),[i,o])]}({groupId:s}),f=(()=>{const e=c??j;return u({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{f&&r(f)}),[f]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);r(e),h(e),m(e)}),[h,m,o]),tabValues:o}}var m=i(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=i(74848);function b(e){let{className:n,block:i,selectedValue:t,selectValue:a,tabValues:l}=e;const r=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,i=r.indexOf(n),s=l[i].value;s!==t&&(c(n),a(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=r.indexOf(e.currentTarget)+1;n=r[i]??r[0];break}case"ArrowLeft":{const i=r.indexOf(e.currentTarget)-1;n=r[i]??r[r.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":i},n),children:l.map((e=>{let{value:n,label:i,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>r.push(e),onKeyDown:h,onClick:d,...o,className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function y(e){let{lazy:n,children:i,selectedValue:o}=e;const a=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function v(e){const n=j(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...n,...e}),(0,g.jsx)(y,{...n,...e})]})}function k(e){const n=(0,m.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(n))}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);